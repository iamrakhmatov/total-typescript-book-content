---
import { type CollectionEntry, getCollection } from "astro:content";
import Posts from "@layouts/Content.astro";
import ChapterDetails from "@layouts/ChapterDetails.astro";
import getSortedContent from "@utils/getSortedContent";
import getPageNumbers from "@utils/getPageNumbers";

export interface Props {
  post: CollectionEntry<"blog">;
}

export async function getStaticPaths() {
  const chapters = await getCollection("blog", ({ data }) => !data.draft);

  const postResult = chapters.map(chapter => ({
    params: { slug: chapter.slug },
    props: { chapter },
  }));

  const pagePaths = getPageNumbers(chapters.length).map(pageNum => ({
    params: { slug: String(pageNum) },
  }));

  return [...postResult, ...pagePaths];
}

const { slug } = Astro.params;
const { post } = Astro.props;

const posts = await getCollection("blog");

const sortedPosts = getSortedContent(posts);

const pagination = getPagination({
  content: sortedPosts,
  page: slug,
});
---

{post ? <ChapterDetails post={post} /> : <Posts {...pagination} />}
@utils/getSortedContent
