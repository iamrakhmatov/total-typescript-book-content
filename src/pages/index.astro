---
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import LinkButton from "@components/LinkButton.astro";
import Hr from "@components/Hr.astro";
import Card from "@components/Card";
import getSortedChapters from "@utils/getSortedChapters";
import { SOCIALS, AUTHOR } from "@config";

const chapters = await getCollection("total-typescript-book");

const sortedChapters = getSortedChapters(chapters, "modDatetime");
const recentUpdates = sortedChapters.slice(0, 3);

const socialCount = SOCIALS.filter(social => social.active).length;

const authorTwitter = AUTHOR.twitter;
---

<Layout>
  <Header />
  <main id="main-content">
    <section id="hero">
      <h1>Total TypeScript Book</h1>
      <a target="_blank" href="/rss.xml" aria-label="rss feed" title="RSS Feed">
        <svg xmlns="http://www.w3.org/2000/svg" class="rss-icon"
          ><path
            d="M19 20.001C19 11.729 12.271 5 4 5v2c7.168 0 13 5.832 13 13.001h2z"
          ></path><path
            d="M12 20.001h2C14 14.486 9.514 10 4 10v2c4.411 0 8 3.589 8 8.001z"
          ></path><circle cx="6" cy="18" r="2"></circle>
        </svg>
        <span class="sr-only">RSS Feed</span>
      </a>

      <a class="author" target="_blank" href={authorTwitter}>by Matt Pocock</a>
      <p>
        AstroPaper is a minimal, responsive, accessible and SEO-friendly Astro
        blog theme. This theme follows best practices and provides accessibility
        out of the box. Light and dark mode are supported by default. Moreover,
        additional color schemes can also be configured.
      </p>
      <p>
        Read the blog posts or check
        <LinkButton
          className="underline decoration-dashed underline-offset-4 hover:text-skin-accent"
          href="https://github.com/satnaing/astro-paper#readme"
        >
          README
        </LinkButton> for more info.
      </p>
    </section>

    <Hr />

    {
      recentUpdates.length > 0 && (
        <section id="recent-updates">
          <h2>Recent Updates</h2>
          <ul>
            {recentUpdates.map(
              ({ data, slug }, index) =>
                index < 4 && (
                  <Card
                    href={`/chapters/${slug}/`}
                    frontmatter={data}
                    secHeading={false}
                  />
                )
            )}
          </ul>
        </section>
      )
    }

    <div class="all-chapters-btn-wrapper">
      <LinkButton href="/chapters/">
        Book content
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="32"
          height="32"
          fill="#000000"
          viewBox="0 0 256 256"
          ><path
            d="M221.66,133.66l-72,72a8,8,0,0,1-11.32-11.32L196.69,136H40a8,8,0,0,1,0-16H196.69L138.34,61.66a8,8,0,0,1,11.32-11.32l72,72A8,8,0,0,1,221.66,133.66Z"
          ></path></svg
        >
      </LinkButton>
    </div>
  </main>

  <Footer />
</Layout>

<style>
  /* ===== Hero Section ===== */
  #hero {
    @apply pb-6 pt-8;
  }
  #hero h1 {
    @apply inline-block text-3xl font-bold sm:text-5xl;
  }
  #hero .rss-icon {
    @apply mb-1 h-6 w-6 scale-110 fill-skin-accent sm:mb-2 sm:scale-125;
  }
  #hero .author {
    @apply mb-4 mt-1 inline-block text-xs italic opacity-70 hover:text-skin-accent sm:mb-8 sm:text-base;
  }
  #hero p {
    @apply my-2;
  }
  .social-wrapper {
    @apply mt-4 flex flex-col sm:flex-row sm:items-center;
  }
  .social-links {
    @apply mb-1 mr-2 whitespace-nowrap sm:mb-0;
  }

  /* ===== Featured & Recent Updates Sections ===== */
  #featured,
  #recent-updates {
    @apply pb-6 pt-12;
  }
  #featured h2,
  #recent-updates h2 {
    @apply text-2xl font-semibold tracking-wide;
  }
  .all-chapters-btn-wrapper {
    @apply my-8 text-center;
  }
</style>
